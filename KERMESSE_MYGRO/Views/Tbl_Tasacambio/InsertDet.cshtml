@using KERMESSE_MYGRO.Models;

@{
    /*Instanciamos objetos y variables */
    KERMESSEEntities db = new KERMESSEEntities();
    tbl_usuario tu = new tbl_usuario();
    tbl_rol_usuario tru = new tbl_rol_usuario();
    List<vw_rol_opciones> listopc = new List<vw_rol_opciones>();
    Int32 idRol = 0;
    String opcion = "";
    Int32 longitud = 0;
    Boolean acceso = false;

    /* Obtenemos la sesion */
    tu = Session["usuario"] as tbl_usuario;

    /* Obtenemos el rol del usuario*/
    tru = db.tbl_rol_usuario.Where(x => x.id_usuario.Equals(tu.id_usuario)).FirstOrDefault();
    idRol = tru.id_rol;
    /* Obtenemos la lista de opciones del rol*/
    listopc = db.vw_rol_opciones.Where(x => x.id_rol.Equals(idRol)).ToList();

    string url = HttpContext.Current.Request.Url.AbsoluteUri;
    string[] separado = url.Split('/');
    string opcionActual = separado[separado.Length - 1];

    longitud = listopc.Count();//Obtenemos la cantidad de elementos
    for (int i = 0; i < longitud; i++)
    {
        //obtenemos la columna opcion de la matriz y/o lista de elementos
        opcion = listopc[i].opcion;
        if (opcionActual.Equals(opcion)) //COMPARAMOS LA OPCION ACTUAL CON CADA OPCIÓN DE LA MATRIZ
        {
            acceso = true; //ACCESO CONCEDIDO
            break;
        }
    }
    if (!acceso)
    {
        Response.Redirect("~/Home/Error");
    }


}



@model KERMESSE_MYGRO.Models.tbl_tasacambio_det

@{
    ViewBag.Title = "InsertDet";
}

<div class="container-fluid">
    <h1 class="mt-4">Gestión de Tasa de cambio</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Inicio</a></li>
        <li class="breadcrumb-item "><a href="@Url.Action("tbl_tasacambio", "Tbl_Tasacambio")">Gestión de tasa de cambio</a></li>
        <li class="breadcrumb-item active">Registrar detalle</li>
    </ol>
    <div class="card mb-4">
        <img src="https://miviajeanewyork.files.wordpress.com/2016/02/monedas-banner.jpg?w=1390" class="card-img-top" alt="moneda">

        <div class="card-body">

            <div class="table">

                <h2>Registrando un nuevo período</h2>

                <div style="text-align: right;">
                    <a href="#" onclick="javascript:window.history.back(-1);return false;" title="Regresar a la página anterior">
                        <i class="fas fa-arrow-circle-left"></i>
                        Regresar a la página anterior
                    </a><br><br>
                </div>

                <form>
                    <div class="card mb-4">

                        <div class="card-body">

                            <h4>Detalle de tasas de cambio del periodo</h4>

                            <br>

                            <div class="row">

                                <div class="col">
                                    <label class="small mb-1">Fecha de Tasa: </label>
                                    @*<input class="form-control" name="fecha" id="fecha"
                                        type="date" placeholder="Ejemplo: dd/MM/yyyy" title="Ingrese una fecha válida!" required />*@
                                    @Html.EditorFor(model => model.fecha, new { htmlAttributes = new { @class = "form-control", @type = "date", @id = "fecha", @name = "fecha" } })
                                    @Html.ValidationMessageFor(model => model.fecha, "", new { @class = "text-danger" })
                                </div>

                                <div class="col">
                                    <label class="small mb-1">Tasa de Cambio: </label>
                                    <div class="input-group mb-3">
                                        @*<input class="form-control" name="tasaC" id="tasaC" type="number" step='0.01'
                                            value='0.00' placeholder="0.00" title="Ingrese la tasa de cambio" required />*@
                                        @Html.EditorFor(model => model.tipo_cambio, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "0", @id = "tasaC", @name = "tasaC", value = "0.00", @step = "0.01" } })
                                        @Html.ValidationMessageFor(model => model.tipo_cambio, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div><br>
                        </div>
                    </div>

                    <br>

                    <div class="form-group">
                        <div class="form-row" style="text-align: center;">

                            <div class="row">
                                <div class="col">
                                    <button class="btn btn-primary btn-block" type="submit"> Registrar detalle </button>
                                </div>

                                <div class="col">
                                    <input class="btn btn-outline-danger btn-block" type="reset" value="Cancelar" />
                                </div>
                            </div>

                        </div>
                    </div>
            </div>
        </div>
        </form>
    </div>
</div>
    </div>
</div>